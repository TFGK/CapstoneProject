{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\laravel\\\\light-bootstrap-dashboard-react-master\\\\src\\\\layouts\\\\Admin.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport { style } from \"variables/Variables.jsx\";\nimport routes from \"routes.js\";\nimport authroutes from \"authroutes.js\";\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return /*#__PURE__*/React.createElement(Route, {\n            path: prop.layout + prop.path,\n            render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n              handleClick: this.handleNotificationClick,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }\n            })),\n            key: key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n\n    this.handleImageClick = image => {\n      this.setState({\n        image: image\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState({\n        color: color\n      });\n    };\n\n    this.handleHasImage = hasImage => {\n      this.setState({\n        hasImage: hasImage\n      });\n    };\n\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  } // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n\n\n  componentDidMount() {\n    this.setState({\n      _notificationSystem: this.refs.notificationSystem\n    });\n    var _notificationSystem = this.refs.notificationSystem;\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n\n      case 2:\n        level = \"warning\";\n        break;\n\n      case 3:\n        level = \"error\";\n        break;\n\n      case 4:\n        level = \"info\";\n        break;\n\n      default:\n        break;\n    }\n\n    _notificationSystem.addNotification({\n      title: /*#__PURE__*/React.createElement(\"span\", {\n        \"data-notify\": \"icon\",\n        className: \"pe-7s-gift\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }\n      }),\n      message: /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, \"Welcome to \", /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 22\n        }\n      }, \"Light Bootstrap Dashboard\"), \" - a beautiful freebie for every web developer.\"),\n      level: level,\n      position: \"tr\",\n      autoDismiss: 15\n    });\n  }\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(NotificationSystem, {\n      ref: \"notificationSystem\",\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      routes: routes,\n      image: this.state.image,\n      color: this.state.color,\n      hasImage: this.state.hasImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AdminNavbar, Object.assign({}, this.props, {\n      brandText: this.getBrandText(this.props.location.pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    }, this.getRoutes(routes)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["C:/code/laravel/light-bootstrap-dashboard-react-master/src/layouts/Admin.jsx"],"names":["React","Component","Route","Switch","NotificationSystem","AdminNavbar","Footer","Sidebar","style","routes","authroutes","image","Admin","constructor","props","getRoutes","map","prop","key","layout","path","handleNotificationClick","getBrandText","i","length","location","pathname","indexOf","name","handleImageClick","setState","handleColorClick","color","handleHasImage","hasImage","state","_notificationSystem","fixedClasses","componentDidMount","refs","notificationSystem","Math","floor","random","level","addNotification","title","message","position","autoDismiss","componentDidUpdate","e","window","innerWidth","history","document","documentElement","className","classList","toggle","action","scrollTop","scrollingElement","mainPanel","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AAEA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,SAASC,KAAT,QAAsB,yBAAtB;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,OAAOC,KAAP,MAAkB,0BAAlB;;AAEA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAC5BY,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACjB,UAAMA,MAAN;;AADiB,SA0CnBC,SA1CmB,GA0CPN,MAAM,IAAI;AACpB,aAAOA,MAAM,CAACO,GAAP,CAAW,CAACC,IAAD,EAAOC,GAAP,KAAe;AAC/B,YAAID,IAAI,CAACE,MAAL,KAAgB,QAApB,EAA8B;AAC5B,8BACE,oBAAC,KAAD;AACE,YAAA,IAAI,EAAEF,IAAI,CAACE,MAAL,GAAcF,IAAI,CAACG,IAD3B;AAEE,YAAA,MAAM,EAAEN,KAAK,iBACX,oBAAC,IAAD,CAAM,SAAN,oBACMA,KADN;AAEE,cAAA,WAAW,EAAE,KAAKO,uBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHJ;AAQE,YAAA,GAAG,EAAEH,GARP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD,SAbD,MAaO;AACL,iBAAO,IAAP;AACD;AACF,OAjBM,CAAP;AAkBD,KA7DkB;;AAAA,SA8DnBI,YA9DmB,GA8DJF,IAAI,IAAI;AACrB,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGd,MAAM,CAACe,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACtC,YACE,KAAKT,KAAL,CAAWW,QAAX,CAAoBC,QAApB,CAA6BC,OAA7B,CACElB,MAAM,CAACc,CAAD,CAAN,CAAUJ,MAAV,GAAmBV,MAAM,CAACc,CAAD,CAAN,CAAUH,IAD/B,MAEM,CAAC,CAHT,EAIE;AACA,iBAAOX,MAAM,CAACc,CAAD,CAAN,CAAUK,IAAjB;AACD;AACF;;AACD,aAAO,OAAP;AACD,KAzEkB;;AAAA,SA0EnBC,gBA1EmB,GA0EAlB,KAAK,IAAI;AAC1B,WAAKmB,QAAL,CAAc;AAAEnB,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KA5EkB;;AAAA,SA6EnBoB,gBA7EmB,GA6EAC,KAAK,IAAI;AAC1B,WAAKF,QAAL,CAAc;AAAEE,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KA/EkB;;AAAA,SAgFnBC,cAhFmB,GAgFFC,QAAQ,IAAI;AAC3B,WAAKJ,QAAL,CAAc;AAAEI,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KAlFkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,mBAAmB,EAAE,IADV;AAEXzB,MAAAA,KAAK,EAAEA,KAFI;AAGXqB,MAAAA,KAAK,EAAE,OAHI;AAIXE,MAAAA,QAAQ,EAAE,IAJC;AAKXG,MAAAA,YAAY,EAAE;AALH,KAAb;AAOD,GAV2B,CAW5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA2CAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,QAAL,CAAc;AAAEM,MAAAA,mBAAmB,EAAE,KAAKG,IAAL,CAAUC;AAAjC,KAAd;AACA,QAAIJ,mBAAmB,GAAG,KAAKG,IAAL,CAAUC,kBAApC;AACA,QAAIR,KAAK,GAAGS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAAhB,GAAoB,CAA/B,CAAZ;AACA,QAAIC,KAAJ;;AACA,YAAQZ,KAAR;AACE,WAAK,CAAL;AACEY,QAAAA,KAAK,GAAG,SAAR;AACA;;AACF,WAAK,CAAL;AACEA,QAAAA,KAAK,GAAG,SAAR;AACA;;AACF,WAAK,CAAL;AACEA,QAAAA,KAAK,GAAG,OAAR;AACA;;AACF,WAAK,CAAL;AACEA,QAAAA,KAAK,GAAG,MAAR;AACA;;AACF;AACE;AAdJ;;AAgBAR,IAAAA,mBAAmB,CAACS,eAApB,CAAoC;AAClCC,MAAAA,KAAK,eAAE;AAAM,uBAAY,MAAlB;AAAyB,QAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD2B;AAElCC,MAAAA,OAAO,eACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADb,oDAHgC;AAQlCH,MAAAA,KAAK,EAAEA,KAR2B;AASlCI,MAAAA,QAAQ,EAAE,IATwB;AAUlCC,MAAAA,WAAW,EAAE;AAVqB,KAApC;AAYD;;AACDC,EAAAA,kBAAkB,CAACC,CAAD,EAAI;AACpB,QACEC,MAAM,CAACC,UAAP,GAAoB,GAApB,IACAF,CAAC,CAACG,OAAF,CAAU7B,QAAV,CAAmBC,QAAnB,KAAgCyB,CAAC,CAAC1B,QAAF,CAAWC,QAD3C,IAEA6B,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,CAAmC9B,OAAnC,CAA2C,UAA3C,MAA2D,CAAC,CAH9D,EAIE;AACA4B,MAAAA,QAAQ,CAACC,eAAT,CAAyBE,SAAzB,CAAmCC,MAAnC,CAA0C,UAA1C;AACD;;AACD,QAAIR,CAAC,CAACG,OAAF,CAAUM,MAAV,KAAqB,MAAzB,EAAiC;AAC/BL,MAAAA,QAAQ,CAACC,eAAT,CAAyBK,SAAzB,GAAqC,CAArC;AACAN,MAAAA,QAAQ,CAACO,gBAAT,CAA0BD,SAA1B,GAAsC,CAAtC;AACA,WAAKtB,IAAL,CAAUwB,SAAV,CAAoBF,SAApB,GAAgC,CAAhC;AACD;AACF;;AACDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAoB,MAAA,GAAG,EAAC,oBAAxB;AAA6C,MAAA,KAAK,EAAExD,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,OAAD,oBAAa,KAAKM,KAAlB;AAAyB,MAAA,MAAM,EAAEL,MAAjC;AAAyC,MAAA,KAAK,EAAE,KAAK0B,KAAL,CAAWxB,KAA3D;AACA,MAAA,KAAK,EAAE,KAAKwB,KAAL,CAAWH,KADlB;AAEA,MAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWD,QAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF,eAKE;AAAK,MAAA,EAAE,EAAC,YAAR;AAAqB,MAAA,SAAS,EAAC,YAA/B;AAA4C,MAAA,GAAG,EAAC,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD,oBACM,KAAKpB,KADX;AAEE,MAAA,SAAS,EAAE,KAAKQ,YAAL,CAAkB,KAAKR,KAAL,CAAWW,QAAX,CAAoBC,QAAtC,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAS,KAAKX,SAAL,CAAeN,MAAf,CAAT,CALF,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CALF,CADF;AAgBD;;AAtJ2B;;AAyJ9B,eAAeG,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport NotificationSystem from \"react-notification-system\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n\nimport { style } from \"variables/Variables.jsx\";\n\nimport routes from \"routes.js\";\nimport authroutes from \"authroutes.js\";\n\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _notificationSystem: null,\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  // handleNotificationClick = position => {\n  //   var color = Math.floor(Math.random() * 4 + 1);\n  //   var level;\n  //   switch (color) {\n  //     case 1:\n  //       level = \"success\";\n  //       break;\n  //     case 2:\n  //       level = \"warning\";\n  //       break;\n  //     case 3:\n  //       level = \"error\";\n  //       break;\n  //     case 4:\n  //       level = \"info\";\n  //       break;\n  //     default:\n  //       break;\n  //   }\n  //   this.state._notificationSystem.addNotification({\n  //     title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n  //     message: (\n  //       <div>\n  //         Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n  //         every web developer.\n  //       </div>\n  //     ),\n  //     level: level,\n  //     position: position,\n  //     autoDismiss: 15\n  //   });\n  // };\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n                handleClick={this.handleNotificationClick}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  \n  componentDidMount() {\n    this.setState({ _notificationSystem: this.refs.notificationSystem });\n    var _notificationSystem = this.refs.notificationSystem;\n    var color = Math.floor(Math.random() * 4 + 1);\n    var level;\n    switch (color) {\n      case 1:\n        level = \"success\";\n        break;\n      case 2:\n        level = \"warning\";\n        break;\n      case 3:\n        level = \"error\";\n        break;\n      case 4:\n        level = \"info\";\n        break;\n      default:\n        break;\n    }\n    _notificationSystem.addNotification({\n      title: <span data-notify=\"icon\" className=\"pe-7s-gift\" />,\n      message: (\n        <div>\n          Welcome to <b>Light Bootstrap Dashboard</b> - a beautiful freebie for\n          every web developer.\n        </div>\n      ),\n      level: level,\n      position: \"tr\",\n      autoDismiss: 15\n    });\n  }\n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <NotificationSystem ref=\"notificationSystem\" style={style} />\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n        color={this.state.color}\n        hasImage={this.state.hasImage}/>\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}