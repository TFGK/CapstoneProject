{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\laravel\\\\light-bootstrap-dashboard-react-master\\\\src\\\\components\\\\location\\\\Location.js\";\nimport { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\nimport React, { Component, Fragment } from \"react\";\nimport axios from 'axios';\n\nclass Location extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stores: [],\n      value1: \"\",\n      value2: \"\",\n      url: \"/api/locations\",\n      location_datas: []\n    };\n\n    this.getDatas = async () => {\n      const location_datas = await axios.get(this.state.url);\n      this.setState({\n        location_datas: location_datas.data\n      });\n    };\n\n    this.addMarkers = async (e, aug, geoData) => {\n      const stores = this.state.stores;\n      let stateData = stores;\n      let latLng;\n      latLng = {\n        latitude: geoData.latLng.lat(),\n        longitude: geoData.latLng.lng()\n      };\n      stateData.push(latLng);\n      await this.setState({\n        stores: stateData,\n        value1: geoData.latLng.lat(),\n        value2: geoData.latLng.lng()\n      });\n      document.getElementsByName(\"location_lat\")[0].value = this.state.value1;\n      console.log('value1', this.state.value1);\n      document.getElementsByName(\"location_lng\")[0].value = this.state.value2;\n      console.log('value2', this.state.value2);\n    };\n\n    this.displayMarkers = () => {\n      return this.state.stores.map((store, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: store.latitude,\n            lng: store.longitude\n          },\n          onClick: () => this.removeMarkers(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    this.displayMarkersAll = () => {\n      return this.state.location_datas.map((location, index) => {\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: index,\n          id: index,\n          position: {\n            lat: location.location_lat,\n            lng: location.location_lng\n          },\n          onClick: () => this.visibleInfoWindow(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    this.visibleInfoWindow = async i => {\n      const location_datas = this.state.location_datas;\n      let stateData = location_datas;\n      stateData[i].bool = !stateData[i].bool;\n      await this.setState({\n        location_datas: stateData\n      });\n    };\n\n    this.displayInfoWindows = () => {\n      return this.state.location_datas.map((location, index) => {\n        return /*#__PURE__*/React.createElement(InfoWindow, {\n          key: index,\n          visible: location.bool,\n          content: location.location_name,\n          position: {\n            lat: location.location_lat,\n            lng: location.location_lng\n          },\n          onClose: () => this.visibleInfoWindow(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        });\n      });\n    };\n\n    this.removeMarkers = async i => {\n      const stores = this.state.stores;\n      let stateData = stores;\n      stateData.splice(i, 1);\n      await this.setState({\n        stores: stateData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getDatas();\n  }\n\n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '80vh',\n      margin: \"0% 5% 5% 0%\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Map, {\n      className: \"google-map\",\n      google: this.props.google,\n      zoom: 15,\n      style: mapStyles,\n      initialCenter: {\n        lat: 35.894380,\n        lng: 128.619268\n      },\n      onClick: this.addMarkers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, this.displayMarkers(), this.displayMarkersAll(), this.displayInfoWindows()));\n  }\n\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyA8Acop1PDTra-V8pBC19IzMSNhqvP9Z20'\n})(Location);","map":{"version":3,"sources":["C:/code/laravel/light-bootstrap-dashboard-react-master/src/components/location/Location.js"],"names":["GoogleApiWrapper","Map","Marker","InfoWindow","React","Component","Fragment","axios","Location","state","stores","value1","value2","url","location_datas","getDatas","get","setState","data","addMarkers","e","aug","geoData","stateData","latLng","latitude","lat","longitude","lng","push","document","getElementsByName","value","console","log","displayMarkers","map","store","index","removeMarkers","displayMarkersAll","location","location_lat","location_lng","visibleInfoWindow","i","bool","displayInfoWindows","location_name","splice","componentDidMount","render","mapStyles","width","height","margin","props","google","apiKey"],"mappings":"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","sourcesContent":["import { GoogleApiWrapper, Map, Marker, InfoWindow } from \"google-maps-react\";\nimport React, { Component, Fragment } from \"react\";\nimport axios from 'axios';\n\nclass Location extends Component {\n  state = {\n    stores: [],\n    value1: \"\",\n    value2: \"\",\n    url: \"/api/locations\",\n    location_datas: []\n  };\n\n  componentDidMount() {\n    this.getDatas();\n\n  }\n\n  getDatas = async() => {\n    const location_datas = await axios.get(this.state.url);\n    this.setState({ location_datas: location_datas.data });\n  };\n\n  addMarkers = async (e, aug, geoData) => {\n    const {stores} = this.state;\n    let stateData = stores;\n    let latLng;\n    latLng = {latitude : geoData.latLng.lat(), longitude : geoData.latLng.lng()};\n    stateData.push(latLng);\n    await this.setState({\n      stores: stateData,\n      value1: geoData.latLng.lat(),\n      value2: geoData.latLng.lng()\n    });\n    document.getElementsByName(\"location_lat\")[0].value = this.state.value1;\n    console.log('value1', this.state.value1);\n    document.getElementsByName(\"location_lng\")[0].value = this.state.value2;\n    console.log('value2', this.state.value2);\n  }\n\n  //맵을 클릭했을 때 그 위치(좌표)에 마커 표시됨.\n  displayMarkers = () => {\n    return this.state.stores.map((store, index) => {\n      return (\n        <Marker\n          key={index}\n          id={index} \n          position={{ lat: store.latitude, lng: store.longitude }}\n          onClick={() => this.removeMarkers(index)}\n        />\n      )\n    });\n  }\n  \n  //홈페이지 들어왔을 때 모든 마커 load\n  displayMarkersAll = () => {\n    return this.state.location_datas.map((location, index) => {\n      return (\n        <Marker\n            key={index}\n            id={index} \n            position={{ lat: location.location_lat, lng: location.location_lng }}\n            onClick={() => this.visibleInfoWindow(index)}\n        />\n      )\n    })\n  }\n\n  //마커 infomation 비저빌리티 함수\n  visibleInfoWindow = async (i) => {\n    const {location_datas} = this.state;\n    let stateData = location_datas;\n    stateData[i].bool = !stateData[i].bool\n    await this.setState({\n      location_datas: stateData\n    })\n  };\n\n  //마커를 눌렀을 때 팝업뜨면서 상세메세지 뜨는거\n  displayInfoWindows = () => {\n    return this.state.location_datas.map((location, index) => {\n      return (\n        <InfoWindow\n          key={index}\n          visible={location.bool}\n          content={location.location_name}\n          position={{ lat: location.location_lat, lng: location.location_lng }} \n          onClose={()=>this.visibleInfoWindow(index)}\n        >\n        </InfoWindow>\n      );\n    })\n  }\n  \n  //클릭 했을 때 마커 삭제함 EX) 추가하려고 클릭했지만 변심으로 제거하려고 할 때 그대로 마커 누르면 제거됨\n  removeMarkers = async (i) => {\n    const {stores} = this.state;\n    let stateData = stores;\n    stateData.splice(i,1);\n    await this.setState({\n      stores: stateData\n    })\n  }\n  \n  render() {\n    const mapStyles = {\n      width: '100%',\n      height: '80vh',\n      margin: \"0% 5% 5% 0%\"\n  }\n\n  return (\n    <div className=\"content\">\n      <Map className=\"google-map\"\n          google = {this.props.google} \n          zoom={15}\n          style={mapStyles}\n          initialCenter= {{\n            lat: 35.894380,\n            lng: 128.619268\n          }}\n          onClick={this.addMarkers}\n          >\n          {this.displayMarkers()}\n          {this.displayMarkersAll()}\n          {this.displayInfoWindows()}\n      </Map>\n    </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyA8Acop1PDTra-V8pBC19IzMSNhqvP9Z20'\n})(Location);\n\n"]},"metadata":{},"sourceType":"module"}