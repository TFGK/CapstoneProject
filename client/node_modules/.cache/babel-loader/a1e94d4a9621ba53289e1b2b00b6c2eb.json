{"ast":null,"code":"var React = require('react');\n\nvar createReactClass = require('create-react-class');\n\nvar PropTypes = require('prop-types');\n\nvar NotificationItem = require('./NotificationItem');\n\nvar Constants = require('./constants');\n\nvar NotificationContainer = createReactClass({\n  propTypes: {\n    position: PropTypes.string.isRequired,\n    notifications: PropTypes.array.isRequired,\n    getStyles: PropTypes.object\n  },\n  _style: {},\n  componentWillMount: function componentWillMount() {\n    // Fix position if width is overrided\n    this._style = this.props.getStyles.container(this.props.position);\n\n    if (this.props.getStyles.overrideWidth && (this.props.position === Constants.positions.tc || this.props.position === Constants.positions.bc)) {\n      this._style.marginLeft = -(this.props.getStyles.overrideWidth / 2);\n    }\n  },\n  render: function render() {\n    var self = this;\n    var notifications;\n\n    if ([Constants.positions.bl, Constants.positions.br, Constants.positions.bc].indexOf(this.props.position) > -1) {\n      this.props.notifications.reverse();\n    }\n\n    notifications = this.props.notifications.map(function (notification) {\n      return React.createElement(NotificationItem, {\n        ref: 'notification-' + notification.uid,\n        key: notification.uid,\n        notification: notification,\n        getStyles: self.props.getStyles,\n        onRemove: self.props.onRemove,\n        noAnimation: self.props.noAnimation,\n        allowHTML: self.props.allowHTML,\n        children: self.props.children\n      });\n    });\n    return React.createElement(\"div\", {\n      className: 'notifications-' + this.props.position,\n      style: this._style\n    }, notifications);\n  }\n});\nmodule.exports = NotificationContainer;","map":null,"metadata":{},"sourceType":"script"}