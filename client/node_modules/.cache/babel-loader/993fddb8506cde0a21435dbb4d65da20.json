{"ast":null,"code":"import _objectSpread from \"C:\\\\code\\\\laravel\\\\light-bootstrap-dashboard-react-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\code\\\\laravel\\\\light-bootstrap-dashboard-react-master\\\\src\\\\layouts\\\\Admin.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\nimport routes from \"routes.js\";\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getRoutes = routes => {\n      return routes.map((prop, key) => {\n        if (prop.layout === \"/admin\") {\n          return /*#__PURE__*/React.createElement(Route, {\n            path: prop.layout + prop.path,\n            render: props => /*#__PURE__*/React.createElement(prop.component, Object.assign({}, props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 15\n              }\n            })),\n            key: key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return null;\n        }\n      });\n    };\n\n    this.getBrandText = path => {\n      for (let i = 0; i < routes.length; i++) {\n        if (this.props.location.pathname.indexOf(routes[i].layout + routes[i].path) !== -1) {\n          return routes[i].name;\n        }\n      }\n\n      return \"Brand\";\n    };\n\n    this.handleImageClick = image => {\n      this.setState({\n        image: image\n      });\n    };\n\n    this.handleColorClick = color => {\n      this.setState({\n        color: color\n      });\n    };\n\n    this.handleHasImage = hasImage => {\n      this.setState({\n        hasImage: hasImage\n      });\n    };\n\n    this.state = {\n      data: _objectSpread({}, this.props),\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  } //side bar routes;\n\n\n  componentDidUpdate(e) {\n    if (window.innerWidth < 993 && e.history.location.pathname !== e.location.pathname && document.documentElement.className.indexOf(\"nav-open\") !== -1) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, Object.assign({}, this.props, {\n      routes: routes,\n      image: this.state.image,\n      color: this.state.color,\n      hasImage: this.state.hasImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AdminNavbar, Object.assign({}, this.props, {\n      brandText: this.getBrandText(this.props.location.pathname),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, this.getRoutes(routes)), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["C:/code/laravel/light-bootstrap-dashboard-react-master/src/layouts/Admin.jsx"],"names":["React","Component","Route","Switch","AdminNavbar","Footer","Sidebar","routes","image","Admin","constructor","props","getRoutes","map","prop","key","layout","path","getBrandText","i","length","location","pathname","indexOf","name","handleImageClick","setState","handleColorClick","color","handleHasImage","hasImage","state","data","fixedClasses","componentDidUpdate","e","window","innerWidth","history","document","documentElement","className","classList","toggle","action","scrollTop","scrollingElement","refs","mainPanel","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport AdminNavbar from \"components/Navbars/AdminNavbar\";\nimport Footer from \"components/Footer/Footer\";\nimport Sidebar from \"components/Sidebar/Sidebar\";\n\nimport routes from \"routes.js\";\nimport image from \"assets/img/sidebar-3.jpg\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      data : {...this.props},\n      image: image,\n      color: \"black\",\n      hasImage: true,\n      fixedClasses: \"dropdown show-dropdown open\"\n    };\n  }\n  //side bar routes;\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            render={props => (\n              <prop.component\n                {...props}\n              />\n            )}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n\n  getBrandText = path => {\n    for (let i = 0; i < routes.length; i++) {\n      if (\n        this.props.location.pathname.indexOf(\n          routes[i].layout + routes[i].path\n        ) !== -1\n      ) {\n        return routes[i].name;\n      }\n    }\n    return \"Brand\";\n  };\n  handleImageClick = image => {\n    this.setState({ image: image });\n  };\n  handleColorClick = color => {\n    this.setState({ color: color });\n  };\n  handleHasImage = hasImage => {\n    this.setState({ hasImage: hasImage });\n  };\n  \n  componentDidUpdate(e) {\n    if (\n      window.innerWidth < 993 &&\n      e.history.location.pathname !== e.location.pathname &&\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\n    ) {\n      document.documentElement.classList.toggle(\"nav-open\");\n    }\n    if (e.history.action === \"PUSH\") {\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <Sidebar {...this.props} routes={routes} image={this.state.image}\n        color={this.state.color}\n        hasImage={this.state.hasImage}/>\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <AdminNavbar\n            {...this.props}\n            brandText={this.getBrandText(this.props.location.pathname)}\n          />\n          <Switch>{this.getRoutes(routes)}</Switch>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}